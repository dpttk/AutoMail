---
- hosts: all

  vars:
    email: 
    domain: 
    collector_name: 
    password: 
    mariadb_password: 
    roundcube_db_password: 

  tasks:
  - name: Update and upgrade apt packages
    become: true
    apt:
      upgrade: yes
      update_cache: yes
      cache_valid_time: 86400 #One day

  - name: Install apache and php.
    become: yes
    apt: 
      name: 
        - apache2
        - php 
        - libapache2-mod-php
        - php-mysql
        - snapd
      state: latest

  - name: Allow apache in ufw.
    become: yes
    community.general.ufw: 
      rule: allow
      name: Apache

  - name: install certbot
    become: yes
    community.general.snap: 
      name: certbot
      classic: true

  - name: Get certificate
    command: sudo certbot certonly --apache --email {{email}} --domain {{ domain }} --agree-tos --non-interactive
    args:
      creates: /etc/letsencrypt/live/{{ domain }}

    
  - name: Setup cronjob for renewal
    cron:
      name: certbot-renewal
      job: "/bin/bash -lc 'certbot -q renew'"
      minute: "0"
      hour: "14"

  - name: Install postfix, dovecot, roundcube
    become: yes
    apt: 
      name: 
        - postfix
        - dovecot-core
        - dovecot-imapd
        - dovecot-pop3d
        - dovecot-lmtpd
        - mariadb-server
        - python3-pymysql
        - python3-mysqldb
      state: latest


  - name: Add collector to postfix
    become: yes
    ansible.builtin.lineinfile:
      path: /etc/postfix/virtual_aliases
      state: present
      create: true
      line: '@{{domain}}       {{collector_name}}@{{domain}}'

  - name: Setup postfix/main.cf
    become: yes
    ansible.builtin.template: 
      src: ./templates/main.cf.j2
      dest: /etc/postfix/main.cf

  - name: Adjust postfix/master.cf
    become: yes
    ansible.builtin.replace:
      path: /etc/postfix/master.cf
      regexp: "#submission inet n       -       y       -       -       smtpd" 
      replace: "submission inet n       -       y       -       -       smtpd"

  - name: dovecot/conf.d/10-mail.conf
    become: yes
    ansible.builtin.replace:
      path: /etc/dovecot/conf.d/10-mail.conf
      regexp: "mail_location = mbox:~/mail:INBOX=/var/mail/%u"
      replace: " mail_location = maildir:/var/mail/vhosts/%d/%n"

  - name: vhost directory
    become: yes
    ansible.builtin.file:
      path: /var/mail/vhosts/{{domain}}
      state: directory

  - name: Create vmail group
    become: yes
    ansible.builtin.group:
      name: vmail
      gid: 5000 
      state: present
  
  - name: Create vmail user
    become: yes
    ansible.builtin.user:
      name: vmail
      group: vmail
      uid: 5000
      home: /var/mail/vhosts/
      system: true
      state: present

  - name: Assigning ownership of vhost directory
    become: yes
    ansible.builtin.file:
      path: /var/mail/vhosts/
      group: vmail

  - name: Configure dovecot
    become: yes
    ansible.builtin.template:
      src: "{{item.src}}"
      dest: "{{item.dest}}"
    loop:
      - src: ./templates/10-master.conf.j2
        dest: /etc/dovecot/conf.d/10-master.conf
      - src: ./templates/10-auth.conf.j2
        dest: /etc/dovecot/conf.d/10-auth.conf
      - src: ./templates/auth-passwdfile.conf.ext.j2
        dest: /etc/dovecot/conf.d/auth-passwdfile.conf.ext
      - src: ./templates/dovecot-users.j2
        dest: /etc/dovecot/dovecot-users

  - name: Still Configure SSL
    become: yes
    ansible.builtin.replace:
      path: /etc/dovecot/conf.d/10-ssl.conf
      regexp: "{{item.regexp}}"
      replace: "{{item.line}}"
    loop:
      - regexp: "ssl = yes"
        line: "ssl = required"
      - regexp: "ssl_cert = </etc/dovecot/private/dovecot.pem"
        line: "ssl_cert = </etc/letsencrypt/live/{{domain}}/fullchain.pem"
      - regexp: "ssl_key = </etc/dovecot/private/dovecot.key"
        line: "ssl_key = </etc/letsencrypt/live/{{domain}}/privkey.pem"


  - name: Add Apache conf 
    become: yes
    ansible.builtin.template:
      src: ./templates/roundcube.conf.j2
      dest: /etc/apache2/sites-enabled/roundcube

  - name: Restart Services
    become: yes
    ansible.builtin.service:
      name: "{{item}}"
      state: restarted
    loop:
      - postfix
      - dovecot
      - apache2


  - name: Set root user to password
    mysql_user:
      check_implicit_admin: true
      login_host: 'localhost'
      login_user: 'root'
      login_password: ''
      name: 'root'
      password: '{{mariadb_password}}'
      state: present
      login_unix_socket: /run/mysqld/mysqld.sock
      column_case_sensitive: true
    become: yes
    ignore_errors: true

  - name: Remove anonymous users
    become: yes
    community.mysql.mysql_user:
      name: ''
      host: localhost
      state: absent
      login_user: 'root'
      login_password: '{{mariadb_password}}'
      column_case_sensitive: true

  - name: Remove test database
    become: yes
    community.mysql.mysql_db:
      name: test
      state: absent
      login_user: 'root'
      login_password: '{{mariadb_password}}'


  - name: Create Roundcube database
    become: yes
    community.mysql.mysql_db:
      login_user: 'root'
      login_password: '{{mariadb_password}}'
      name: roundcube
      state: present

  - name: Create Roundcube db user
    become: yes
    community.mysql.mysql_user:
      login_user: 'root'
      login_password: '{{mariadb_password}}'
      name: roundcubeuser
      password: '{{roundcube_db_password}}'
      priv: 'roundcube.*:ALL'
      host: localhost
      state: present

  - name: Download Roundcube
    get_url:
      url: https://github.com/roundcube/roundcubemail/releases/download/1.4.6/roundcubemail-1.4.6-complete.tar.gz
      dest: /tmp/roundcubemail-1.4.6-complete.tar.gz

  - name: Extract Roundcube
    become: yes
    unarchive:
      src: /tmp/roundcubemail-1.4.6-complete.tar.gz
      dest: /var/www/
      remote_src: yes
      extra_opts: [--transform, 's/roundcubemail-1.4.6/roundcube/']

  - name: Set ownership of Roundcube directory
    become: yes
    file:
      path: /var/www/html/roundcube
      owner: www-data
      group: www-data
      state: directory
      recurse: yes

  - name: Initialize Roundcube database
    mysql_db:
      name: roundcube
      state: import
      target: /var/www/roundcube/SQL/mysql.initial.sql
      login_user: roundcubeuser
      login_password: '{{roundcube_db_password}}'
    ignore_errors: true

  - name: Remove Roundcube installer directory
    become: yes
    file:
      path: /var/www/roundcube/installer
      state: absent
